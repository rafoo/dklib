(; Calculus of Construction embedded into Lambda-Pi Modulo ;)

uT : Type.
def eT : uT -> Type.

Pi : X : uT -> ((eT X) -> uT) -> uT.
[X,Y] eT (Pi X Y) --> x : (eT X) -> (eT (Y x)).

def Arrow : uT -> uT -> uT.
[t1,t2] Arrow t1 t2 --> Pi t1 (x : eT t1 => t2).
